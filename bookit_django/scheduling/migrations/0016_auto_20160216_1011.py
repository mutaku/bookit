# -*- coding: utf-8 -*-
# Generated by Django 1.9b1 on 2016-02-16 15:11
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('scheduling', '0015_auto_20160202_1308'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='scheduling.Brand')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('job', models.TextField(verbose_name='Job')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'ordering': ['-start_time']},
        ),
        migrations.AddField(
            model_name='equipment',
            name='modified',
            field=models.DateTimeField(auto_now=True, default=datetime.datetime(2016, 2, 16, 15, 11, 36, 986415, tzinfo=utc), verbose_name='Modified'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='ticket',
            name='comment',
            field=models.ManyToManyField(blank=True, related_name='comments', to='scheduling.Comment'),
        ),
        migrations.AddField(
            model_name='component',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='scheduling.Model'),
        ),
        migrations.AddField(
            model_name='component',
            name='service_record',
            field=models.ManyToManyField(blank=True, related_name='components', to='scheduling.Service'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='brand',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='scheduling.Brand'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='equipment',
            name='components',
            field=models.ManyToManyField(blank=True, related_name='equipment', to='scheduling.Component'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='model',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='scheduling.Model'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='equipment',
            name='service_record',
            field=models.ManyToManyField(blank=True, related_name='serviced', to='scheduling.Service'),
        ),
    ]
